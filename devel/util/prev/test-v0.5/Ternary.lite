Ternary Expression test
-----------------------

    declare global expect

    var Tests = 

      'basic - true-value:else-value':

        code: function
          
          var a = 4

          return [ a is 4? 'yes':'no', a is 5? 'yes':'no' ]

        expected: ['yes', 'no' ]


      'composed':

        code: function
          
          var 
            a = 4

          return [ 
            a > 0 and a<10? a is 5? 'yes,5!' : a is 4? 'yes 4!':'not 4' : 'not in 1..9' 
            a > 10 and a<0? a is 5? 'yes,5!' : a is 4? 'yes 4!':'not 4' : 'last option'
            a > 0 and a<10? a is 5? 'yes 5!':'not 5' : 'not in 1..9' 
            ]

        expected: ['yes 4!', 'last option', 'not 5']

    
      'basic - x ? value else value':

        code: function
          
          var a = 4

          return [ a is 4? 'yes' else 'no', a is 5? 'yes' else 'no' ]

        expected: ['yes', 'no' ]


      'composed *else* instead of ":" ':

        code: function
          
          var 
            a = 4

          return [ 
            a > 0 and a<10? a is 5? 'yes,5!' else a is 4? 'yes 4!' else 'not 4' else 'not in 1..9' 
            a > 10 and a<0? a is 5? 'yes,5!' else a is 4? 'yes 4!' else 'not 4' else 'last option'
            a > 0 and a<10? a is 5? 'yes 5!' else 'not 5' else 'not in 1..9' 
            ]

        expected: ['yes 4!', 'last option', 'not 5']


      'a? b else c - differentiate from if-else':

        code: function
          
          var 
            a = 4, b = 1
            r = 0

          if b is 1
            r = a>=1 and a<=10? 'in 1..10' else 'not in 1..10'
          else
            r = a is 1? 10 else a is 2? 20 else -1
          end if

          expect r,'in 1..10'

          if (a >= 1 and a<=10? a is 5? 'yes,5!' else a is 4? 'yes 4!' else 'not 4' else 'last option') into r 
            do nothing
          else
            r=-1

          expect r,'yes 4!'

